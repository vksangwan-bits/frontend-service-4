# docker-compose.deploy.yml
version: '3.8'

volumes:
  userdb_vol:
  productdb_vol:
  orderdb_vol:

networks:
  micro_network:
    external:
      name: micro_network

services:
  user-api:
    container_name: cuser-service
    build:
      context: ../user-service
    ports:
    - "5001:5001"
    depends_on:
      - user-db
    networks:
      - micro_network
    restart: always

  user-db:
    container_name: cuser_dbase
    image: postgres:latest
    ports:
    - "32000:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Mango42
      POSTGRES_DB: user
    networks:
      - micro_network
    volumes:
    - userdb_vol:/var/lib/postgresql/data

  product-api:
    container_name: cproduct-service
    build:
      context: ../product-service
    ports:
    - "5002:5002"
    depends_on:
      - product-db
    networks:
      - micro_network
    restart: always

  product-db:
    container_name: cproduct_dbase
    image: postgres:latest
    ports:
    - "32001:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Mango42
      POSTGRES_DB: product
    networks:
      - micro_network
    volumes:
    - productdb_vol:/var/lib/postgresql/data

  order-api:
    container_name: corder-service
    build:
      context: ../order-service
    ports:
    - "5003:5003"
    depends_on:
      - order-db
    networks:
      - micro_network
    restart: always

  order-db:
    container_name: corder_dbase
    image: postgres:latest
    ports:
    - "32002:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Mango42
      POSTGRES_DB: order
    networks:
      - micro_network
    volumes:
    - orderdb_vol:/var/lib/postgresql/data

  frontend-app:
    container_name: cfrontend-app
    build:
      context: .
    ports:
    - "5000:5000"
    networks:
      - micro_network
    restart: always